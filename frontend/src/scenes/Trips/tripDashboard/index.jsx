import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Payment } from '@mui/icons-material';
import './tripDashboard.css';

const ViewTrips = () => {
  const [trips, setTrips] = useState([]);
  const userName = localStorage.getItem('userName');
  const userId = localStorage.getItem('userId');
  const email = localStorage.getItem('email');

  const fetchTrips = async () => {
    try {
      const response = await axios.get('http://localhost:5000/api/trips');
      setTrips(response.data);
    } catch (error) {
      console.error('Failed to fetch trips:', error);
    }
  };

  useEffect(() => {
    fetchTrips();
  }, []);

  const handlePayment = async (trip) => {
    try {
      const { data } = await axios.post('http://localhost:5000/api/payment', { tripId: trip._id });

      const options = {
        key: "rzp_test_USUKqObpxVODG3", // Replace with your Razorpay Key ID
        amount: data.price * 100, // Amount in paise (100 paise = 1 INR)
        currency: 'INR',
        name: "Trip Payment",
        description: `Booking for ${trip.name}`,
        image: 'https://example.com/your_logo.jpg', // Optional logo
        order_id: data.id, // Order ID generated by Razorpay
        handler: async function (response) {
          alert(`Payment successful! Payment ID: ${response.razorpay_payment_id}`);

          try {
            const token = localStorage.getItem('token');
            await axios.post('http://localhost:5000/api/bookings/admin/bookings', {
              itemType: 'Trip', // Specify item type
              itemId: trip._id,
              itemName: trip.name,
              price: trip.price,
              paymentId: response.razorpay_payment_id,
              paymentStatus: 'Completed',
              user: userId,
              userDetails: {
                name: userName,
                email: email,
              }
            }, {
              headers: {
                Authorization: `Bearer ${token}`
              }
            });
            alert('Booking saved successfully!');
          } catch (error) {
            console.error('Error saving booking:', error);
            alert('Failed to save booking: ' + error.response.data.message);
          }
        },
        prefill: {
          name: userName || "Name",
          email: email || 'Email',
          contact: 'PhoneNumber'
        },
        notes: {
          tripId: trip._id
        },
        theme: {
          color: '#F37254'
        }
      };

      const paymentObject = new window.Razorpay(options);
      paymentObject.open();
    } catch (error) {
      console.error('Payment error:', error);
      alert('Payment initialization failed. Please try again.');
    }
  };

  return (
    <div className="table-container">
      <h2>All Trips Details</h2>
      <table>
        <thead>
          <tr>
            <th>Trip Name</th>
            <th>Destination</th>
            <th>From</th>
            <th>To</th>
            <th>Price</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {trips.map((trip) => (
            <tr key={trip._id}>
              <td>{trip.name}</td>
              <td>{trip.destination}</td>
              <td>{trip.from}</td>
              <td>{trip.to}</td>
              <td>{trip.price}</td>
              <td>
                <Payment 
                  style={{ cursor: 'pointer', color: 'green' }} 
                  onClick={() => handlePayment(trip)} 
                />
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default ViewTrips;
